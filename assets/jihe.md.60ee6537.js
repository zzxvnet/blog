import{_ as a,o as s,c as n,O as p}from"./chunks/framework.9482e208.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"jihe.md","filePath":"jihe.md"}'),e={name:"jihe.md"},l=p(`<h2 id="nginx和php里需要怎么集合" tabindex="-1">nginx和php里需要怎么集合 <a class="header-anchor" href="#nginx和php里需要怎么集合" aria-label="Permalink to &quot;nginx和php里需要怎么集合&quot;">​</a></h2><h3 id="_1-安装epel存储库-以便能够从yum源安装php和php-fpm" tabindex="-1">1.安装EPEL存储库，以便能够从Yum源安装PHP和PHP-FPM： <a class="header-anchor" href="#_1-安装epel存储库-以便能够从yum源安装php和php-fpm" aria-label="Permalink to &quot;1.安装EPEL存储库，以便能够从Yum源安装PHP和PHP-FPM：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo yum install epel-release</span></span></code></pre></div><h3 id="_2-安装php和php-fpm" tabindex="-1">2.安装PHP和PHP-FPM： <a class="header-anchor" href="#_2-安装php和php-fpm" aria-label="Permalink to &quot;2.安装PHP和PHP-FPM：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo yum install php php-fpm</span></span></code></pre></div><h3 id="_3-启动并启用php-fpm服务" tabindex="-1">3.启动并启用PHP-FPM服务： <a class="header-anchor" href="#_3-启动并启用php-fpm服务" aria-label="Permalink to &quot;3.启动并启用PHP-FPM服务：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo systemctl start php-fpm</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo systemctl enable php-fpm</span></span></code></pre></div><h3 id="_4-修改php-fpm配置文件-使其监听nginx。编辑-etc-php-fpm-d-www-conf文件" tabindex="-1">4.修改PHP-FPM配置文件，使其监听Nginx。编辑/etc/php-fpm.d/www.conf文件： <a class="header-anchor" href="#_4-修改php-fpm配置文件-使其监听nginx。编辑-etc-php-fpm-d-www-conf文件" aria-label="Permalink to &quot;4.修改PHP-FPM配置文件，使其监听Nginx。编辑/etc/php-fpm.d/www.conf文件：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo vi /etc/php-fpm.d/www.conf</span></span></code></pre></div><h3 id="找到以下行" tabindex="-1">找到以下行： <a class="header-anchor" href="#找到以下行" aria-label="Permalink to &quot;找到以下行：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">listen = 127.0.0.1:9000</span></span></code></pre></div><h3 id="将其替换为" tabindex="-1">将其替换为： <a class="header-anchor" href="#将其替换为" aria-label="Permalink to &quot;将其替换为：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">listen = /var/run/php-fpm/php-fpm.sock</span></span></code></pre></div><p>还需要更改以下用户和组设置：</p><p>将：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user = apache</span></span>
<span class="line"><span style="color:#A6ACCD;">group = apache</span></span></code></pre></div><p>替换为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user = nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">group = nginx</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">listen.owner = nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">listen.group = nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">listen.mode = 0660</span></span></code></pre></div><h3 id="保存文件并退出编辑器。" tabindex="-1">保存文件并退出编辑器。 <a class="header-anchor" href="#保存文件并退出编辑器。" aria-label="Permalink to &quot;保存文件并退出编辑器。&quot;">​</a></h3><h3 id="重启php-fpm服务以应用更改" tabindex="-1">重启PHP-FPM服务以应用更改： <a class="header-anchor" href="#重启php-fpm服务以应用更改" aria-label="Permalink to &quot;重启PHP-FPM服务以应用更改：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo systemctl restart php-fpm</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo systemctl restart nginx</span></span></code></pre></div><h3 id="_5-检查-var-run-php-fpm-php-fpm-sock文件所有者-如果是root-则改成nginx用户" tabindex="-1">5.检查 /var/run/php-fpm/php-fpm.sock文件所有者，如果是root，则改成Nginx用户 <a class="header-anchor" href="#_5-检查-var-run-php-fpm-php-fpm-sock文件所有者-如果是root-则改成nginx用户" aria-label="Permalink to &quot;5.检查 /var/run/php-fpm/php-fpm.sock文件所有者，如果是root，则改成Nginx用户&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ls -la /var/run/php-fpm/php-fpm.sock</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[root@iZj6c73ltaqggmig1fz8hqZ zzxvhub]# ls -la /var/run/php-fpm/php-fpm.sock</span></span>
<span class="line"><span style="color:#A6ACCD;">srw-rw---- 1 root root 0 May  7 16:32 /var/run/php-fpm/php-fpm.sock</span></span></code></pre></div><h3 id="确保-var-run-php-fpm-php-fpm-sock文件的所有者和用户组设置正确。文件的所有者和用户组应与nginx用户相匹配。您可以使用命令chown-nginx-nginx-var-run-php-fpm-php-fpm-sock将所有者和用户组更改为nginx用户。" tabindex="-1">确保/var/run/php-fpm/php-fpm.sock文件的所有者和用户组设置正确。文件的所有者和用户组应与Nginx用户相匹配。您可以使用命令chown nginx:nginx /var/run/php-fpm/php-fpm.sock将所有者和用户组更改为Nginx用户。 <a class="header-anchor" href="#确保-var-run-php-fpm-php-fpm-sock文件的所有者和用户组设置正确。文件的所有者和用户组应与nginx用户相匹配。您可以使用命令chown-nginx-nginx-var-run-php-fpm-php-fpm-sock将所有者和用户组更改为nginx用户。" aria-label="Permalink to &quot;确保/var/run/php-fpm/php-fpm.sock文件的所有者和用户组设置正确。文件的所有者和用户组应与Nginx用户相匹配。您可以使用命令chown nginx:nginx /var/run/php-fpm/php-fpm.sock将所有者和用户组更改为Nginx用户。&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">chown nginx:nginx /var/run/php-fpm/php-fpm.sock</span></span></code></pre></div><h3 id="_6-配置nginx以使用php-fpm。编辑nginx的默认虚拟主机配置文件-或根据需要创建一个新的配置文件" tabindex="-1">6.配置Nginx以使用PHP-FPM。编辑Nginx的默认虚拟主机配置文件（或根据需要创建一个新的配置文件）： <a class="header-anchor" href="#_6-配置nginx以使用php-fpm。编辑nginx的默认虚拟主机配置文件-或根据需要创建一个新的配置文件" aria-label="Permalink to &quot;6.配置Nginx以使用PHP-FPM。编辑Nginx的默认虚拟主机配置文件（或根据需要创建一个新的配置文件）：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo vi /etc/nginx/conf.d/default.conf</span></span></code></pre></div><h3 id="在server块中-添加以下location块" tabindex="-1">在server块中，添加以下location块： <a class="header-anchor" href="#在server块中-添加以下location块" aria-label="Permalink to &quot;在server块中，添加以下location块：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">location ~ \\.php$ {</span></span>
<span class="line"><span style="color:#A6ACCD;">    try_files $uri =404;</span></span>
<span class="line"><span style="color:#A6ACCD;">    fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;</span></span>
<span class="line"><span style="color:#A6ACCD;">    fastcgi_index index.php;</span></span>
<span class="line"><span style="color:#A6ACCD;">    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span></span>
<span class="line"><span style="color:#A6ACCD;">    include fastcgi_params;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><h3 id="保存文件并退出编辑器。-1" tabindex="-1">保存文件并退出编辑器。 <a class="header-anchor" href="#保存文件并退出编辑器。-1" aria-label="Permalink to &quot;保存文件并退出编辑器。&quot;">​</a></h3><h3 id="_7-重启nginx服务以应用更改" tabindex="-1">7.重启Nginx服务以应用更改： <a class="header-anchor" href="#_7-重启nginx服务以应用更改" aria-label="Permalink to &quot;7.重启Nginx服务以应用更改：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo systemctl restart nginx</span></span></code></pre></div><h3 id="测试php。在nginx的默认站点目录-通常是-usr-share-nginx-html-中创建一个名为info-php的文件" tabindex="-1">测试PHP。在Nginx的默认站点目录（通常是/usr/share/nginx/html）中创建一个名为info.php的文件： <a class="header-anchor" href="#测试php。在nginx的默认站点目录-通常是-usr-share-nginx-html-中创建一个名为info-php的文件" aria-label="Permalink to &quot;测试PHP。在Nginx的默认站点目录（通常是/usr/share/nginx/html）中创建一个名为info.php的文件：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo vi /usr/share/nginx/html/info.php</span></span></code></pre></div><h3 id="在文件中添加以下内容" tabindex="-1">在文件中添加以下内容： <a class="header-anchor" href="#在文件中添加以下内容" aria-label="Permalink to &quot;在文件中添加以下内容：&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;?php</span></span>
<span class="line"><span style="color:#A6ACCD;">phpinfo();</span></span>
<span class="line"><span style="color:#A6ACCD;">?&gt;</span></span></code></pre></div><h3 id="保存文件并退出编辑器。-2" tabindex="-1">保存文件并退出编辑器。 <a class="header-anchor" href="#保存文件并退出编辑器。-2" aria-label="Permalink to &quot;保存文件并退出编辑器。&quot;">​</a></h3><h3 id="现在-打开web浏览器并访问http-your-server-ip-info-php。你应该看到一个包含php信息的页面。这表明nginx已成功集成php-fpm并正常工作。" tabindex="-1">现在，打开Web浏览器并访问http://your_server_IP/info.php。你应该看到一个包含PHP信息的页面。这表明Nginx已成功集成PHP-FPM并正常工作。 <a class="header-anchor" href="#现在-打开web浏览器并访问http-your-server-ip-info-php。你应该看到一个包含php信息的页面。这表明nginx已成功集成php-fpm并正常工作。" aria-label="Permalink to &quot;现在，打开Web浏览器并访问http://your_server_IP/info.php。你应该看到一个包含PHP信息的页面。这表明Nginx已成功集成PHP-FPM并正常工作。&quot;">​</a></h3><h3 id="注意-完成测试后-出于安全原因-请删除info-php文件。" tabindex="-1">注意：完成测试后，出于安全原因，请删除info.php文件。 <a class="header-anchor" href="#注意-完成测试后-出于安全原因-请删除info-php文件。" aria-label="Permalink to &quot;注意：完成测试后，出于安全原因，请删除info.php文件。&quot;">​</a></h3>`,41),o=[l];function t(i,c,r,h,d,u){return s(),n("div",null,o)}const f=a(e,[["render",t]]);export{m as __pageData,f as default};
